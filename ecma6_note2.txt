const first = () => {
	const greet = 'Hi';
	const second = () =>{
		alert(greet);
	}
	return second;

}

const newFunc = first();
newFunc();

//Closures - a function ran. the function executed. It's never going 
//But it's going to remember that there are references to those variables
//so the child scope alwats has access to the parent scope

//Currying
const multiply = (a, b) => a*b;
const curriedMultiply = (a) => (b) => a*b;
const mutiplyBy5 = curriedMultiply(5);

//Compose
const compose = (f,g) => (a) => f(g(a));

//Avoid Side Effects, funcional purity

//Deterministic